<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:annotation-config/>
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!--<bean class="com.ws.framework.web.aop.MyAspect" />-->


	<context:component-scan base-package="com.ws.framework.web" />



	<!--<mvc:interceptors>-->
		<!--&lt;!&ndash; 对所有请求都拦截，公共拦截器可以有多个 &ndash;&gt;-->
		<!--<bean id="baseInterceptor" class="com.ws.framework.web.interceptor.TestInterceptor" />-->
		<!--&lt;!&ndash; <bean name="testInterceptor" class="cn.zifangsky.interceptor.TestInterceptor" /> &ndash;&gt;-->
	<!--</mvc:interceptors>-->


	<!-- 返回json 方法一 需要导入 fastjson.jar包 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="validator"
		  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!--不设置则默认为classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="validateMessageSource" />
	</bean>

	<bean id="validateMessageSource"
		  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:common-config" />
		<property name="fileEncodings" value="UTF-8" />
		<property name="cacheSeconds" value="120" />
	</bean>

</beans>